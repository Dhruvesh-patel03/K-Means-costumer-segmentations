import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# Upload and load dataset
uploaded = files.upload()
filename = list(uploaded.keys())[0]
data = pd.read_csv(filename)
print(data.columns.tolist())
data['Gender'] = data['Gender'].map({'Male': 0, 'Female': 1})

# Feature selection
X = data[['Annual Income (k$)', 'Spending Score (1-100)', 'Age', 'Gender']]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Elbow used Method to determine optimal clusters
inertia = []
for k in range(1, 10):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    inertia.append(kmeans.inertia_)

plt.plot(range(1, 10), inertia, 'bo-')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.title('Elbow Method')
plt.show()

# Fit K-means with chosen k (k=3)
kmeans = KMeans(n_clusters=3, random_state=42)
data['Cluster'] = kmeans.fit_predict(X_scaled)

print(data.groupby('Cluster').mean())
features = ['Age', 'Annual Income (k$)', 'Spending Score (1-100)']

plt.figure(figsize=(18, 6))

# Fit K-means with chosen k (k=5)
kmeans = KMeans(n_clusters=5, random_state=42)
data['Cluster'] = kmeans.fit_predict(X_scaled)

# Extract the centroids
centroids = scaler.inverse_transform(kmeans.cluster_centers_)

# Scatter plot for customer segmentation
plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='Annual Income (k$)', y='Spending Score (1-100)', hue='Cluster', palette='viridis', s=100, alpha=0.7, edgecolor='black')
plt.scatter(centroids[:, X.columns.get_loc('Annual Income (k$)')], 
            centroids[:, X.columns.get_loc('Spending Score (1-100)')], 
            s=250, marker='*', color='red', edgecolor='black', label='Centroids')
plt.title('Customer Segmentation Based on Annual Income and Spending Score')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend(title='Cluster')
plt.show()
